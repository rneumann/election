networks:
  db_net:
    driver: bridge
    internal: true
  admin_net:
    driver: bridge

services:
  postgres:
    image: postgres:18
    container_name: postgres
    profiles: ['prod']
    env_file:
      - .env
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    shm_size: '1g'
    tmpfs:
      - /var/run/postgresql
      - /tmp
    volumes:
      - postgres_data:/var/lib/postgresql
      - ./initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'election', '-d', 'election_db', '-h', '127.0.0.1']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - db_net
      - admin_net

  postgres-dev:
    image: postgres:18
    container_name: postgres-dev
    hostname: election
    profiles: ['dev']
    env_file:
      - .env
    volumes:
      - postgres_data_dev:/var/lib/postgresql
      - ./initdb:/docker-entrypoint-initdb.d:ro
    ports:
      - '5432:5432'
    shm_size: '1g'
    tmpfs:
      - /var/run/postgresql
      - /tmp
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'election', '-d', 'election_db', '-h', '127.0.0.1']
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - db_net
      - admin_net

  pgadmin-dev:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    profiles: ['dev']
    env_file:
      - .pgadmin.env
    ports:
      - '8080:80'
    depends_on:
      - postgres-dev
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    networks:
      - admin_net

volumes:
  postgres_data:
  postgres_data_dev:
  pgadmin_data_dev:
